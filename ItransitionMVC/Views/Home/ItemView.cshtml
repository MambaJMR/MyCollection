@model ItransitionMVC.Models.Item.CustomCollectionItem
@using Microsoft.AspNetCore.Identity;

@{
    var itemInt = Model.Collection.ItemIntElements?.Where(i => i.CollectionId == Model.CollectionId).ToList();
    var itemStr = Model.Collection.ItemElements?.Where(i => i.CollectionId == Model.CollectionId).ToList();
    var itemDate = Model.Collection.ItemDateElements?.Where(i => i.CollectionId == Model.CollectionId).ToList();
}
<div class="container-fluid">
    <h1>@Model.Name</h1> 
    </div>
<div>
    <h4>@Locolize.GetKey("Description")</h4>
    <p>@Model.Description</p>
</div>
            <div class="row mt-2">
                <div class="form-inline col-2">
                    
                    <div>
                        <ul>
                            @foreach (var tag in Model.ItemTags)
                            {
                                <li>
                                    <a class="nav-link" asp-controller="Search" asp-action="Search" asp-route-searchText="@tag.Name">#@tag.Name</a>
                                </li>
                            }
                        </ul>
                    </div>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div>
                             @Locolize.GetKey("Likes"):
                            <label class="mt-1" for="likeImage" id="likeCount">@Model.ItemLikes?.Count()</label>
                            <button class="btn btn-like" id="likeImage">
                                @if (Model.ItemLikes?.Where(x => x.UserId == User.Identity.Name).Count() == 0)
                                {
                                  <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve"> 
                                  <path style="fill:#FD3018;" d="M256,482.164c-3.526,0-7.052-1.238-9.88-3.713l-0.655-0.574 c-21.813-19.085-42.302-36.544-62.115-53.429c-53.171-45.309-99.088-84.437-131.005-122.397C16.633,259.578,0,219.954,0,177.351 c0-39.138,13.267-75.746,37.355-103.08C62.609,45.616,97.642,29.836,136,29.836c53.948,0,88.103,32.22,107.255,59.25 c4.97,7.014,9.196,14.047,12.745,20.665c3.549-6.618,7.776-13.651,12.745-20.665c19.152-27.029,53.307-59.25,107.255-59.25 c38.358,0,73.391,15.781,98.644,44.435C498.733,101.605,512,138.213,512,177.351c0,42.603-16.633,82.228-52.345,124.7 c-31.917,37.96-77.834,77.088-131.002,122.395c-19.816,16.887-40.305,34.346-62.118,53.431l-0.655,0.574 C263.052,480.927,259.526,482.164,256,482.164z M136,59.836c-29.621,0-56.66,12.171-76.138,34.271 C40.605,115.957,30,145.521,30,177.351c0,77.007,68.745,135.588,172.804,224.261c17.083,14.557,34.662,29.537,53.196,45.648 c18.535-16.112,36.113-31.091,53.193-45.646C413.255,312.939,482,254.358,482,177.351c0-31.83-10.605-61.394-29.863-83.245 C432.66,72.007,405.621,59.836,376,59.836c-41.129,0-67.716,25.338-82.776,46.594c-13.509,19.065-20.558,38.282-22.962,45.66 c-2.011,6.175-7.768,10.354-14.262,10.354s-12.251-4.179-14.262-10.354c-2.404-7.377-9.453-26.595-22.962-45.659 C203.716,85.174,177.129,59.836,136,59.836z" /></svg>
                                }
                                else
                                {
                                   <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"><path style="fill: rgb(255, 30, 0);" d="M24.85,10.126c2.018-4.783,6.628-8.125,11.99-8.125c7.223,0,12.425,6.179,13.079,13.543 c0,0,0.353,1.828-0.424,5.119c-1.058,4.482-3.545,8.464-6.898,11.503L24.85,48L7.402,32.165c-3.353-3.038-5.84-7.021-6.898-11.503 c-0.777-3.291-0.424-5.119-0.424-5.119C0.734,8.179,5.936,2,13.159,2C18.522,2,22.832,5.343,24.85,10.126z" fill="#D75A4A"></path></svg>
                                }
                            </button>
                            
                        </div>
                    }
                </div>
            </div>
                        <div class="row">

                            @for (int i = 0; i < itemStr.Count; i++)
                            {
                                <div class="col-sm">
                                    <h3>@itemStr[i].Name</h3>
                                    <p>@Model.StrValue[i]</p>
                                </div>
                            }
                            @for (int i = 0; i < itemInt.Count; i++)
                            {
                                <div class="col-sm">
                                    <h3>@itemInt[i].IntName</h3>
                                    <p>@Model.IntValue[i]</p>
                                </div>
                            }
                            @for (int i = 0; i < itemDate.Count; i++)
                            {
                                <div class="col-sm">
                                    <h3>@itemDate[i].DateName</h3>
                                    <p>@Model.DateValue[i]</p>
                                </div>
                            }
                        </div>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="row">
                    <div class="row col-12">
                        <div class="col-md-12">

                            <div>
                                <div class="text-secondary">
                                    @Locolize.GetKey("Comments");
                                </div>
                                <div>
                                    <textarea class="form-control" placeholder="" CommentPlaceholder"" rows="5" name="Comment" id="comment"></textarea>
                        <button class="btn btn-primary float-right m-2" id="commentButton">@Locolize.GetKey("Submit")</button>
                                    <br />
                                    <br />
                                    <hr>
                                    <ul id="commentsList">
                                        @foreach (var comment in Model.ItemComments)
                                        {
                                            <li class="media">
                                                <div>
                                                    <div class="media-body">
                                                        <strong class="text-success">@comment.UserName</strong>
                                                        <span class="text-muted">
                                                            <small class="text-muted">@comment.CommentCreateDate.ToShortDateString() @comment.CommentCreateDate.ToShortTimeString()</small>
                                                        </span>
                                                        <p>
                                                            @comment.CommentValue
                                                        </p>
                                                    </div>
                                                    <div></div>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                
                        </div>
                    </div>
                </div>
            }
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/Home/ItemView")
        .build();
        hubConnection.on("Likes", function (likeCount, userLike) {
            let svg = "";

            if (likeCount == 0) {

            svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\">" +
                "<path style=\"fill: rgb(255, 25, 0);\" d=\"M256,482.164c-3.526,0-7.052-1.238-9.88-3.713l-0.655-0.574c-21.813-19.085-42.302-36.544-62.115-53.429c-53.171-45.309-99.088-84.437-131.005-122.397C16.633,259.578,0,219.954,0,177.351c0-39.138,13.267-75.746, 37.355-103.08C62.609, 45.616, 97.642, 29.836, 136, 29.836c53.948, 0, 88.103, 32.22, 107.255, 59.25 c4.97, 7.014, 9.196, 14.047, 12.745, 20.665c3.549-6.618, 7.776-13.651, 12.745-20.665c19.152-27.029, 53.307-59.25, 107.255-59.25 c38.358, 0, 73.391, 15.781, 98.644, 44.435C498.733, 101.605, 512, 138.213, 512, 177.351c0, 42.603-16.633, 82.228-52.345, 124.7 c-31.917, 37.96-77.834, 77.088-131.002, 122.395c-19.816, 16.887-40.305, 34.346-62.118, 53.431l-0.655, 0.574 C263.052, 480.927, 259.526, 482.164, 256, 482.164z M136, 59.836c-29.621, 0-56.66, 12.171-76.138, 34.271 C40.605, 115.957, 30, 145.521, 30, 177.351c0, 77.007, 68.745, 135.588, 172.804, 224.261c17.083, 14.557, 34.662, 29.537, 53.196, 45.648 c18.535-16.112, 36.113-31.091, 53.193-45.646C413.255, 312.939, 482, 254.358, 482, 177.351c0-31.83-10.605-61.394-29.863-83.245 C432.66, 72.007, 405.621, 59.836, 376, 59.836c-41.129, 0-67.716, 25.338-82.776, 46.594c-13.509, 19.065-20.558, 38.282-22.962, 45.66 c-2.011, 6.175-7.768, 10.354-14.262, 10.354s-12.251-4.179-14.262-10.354c-2.404-7.377-9.453-26.595-22.962-45.659 C203.716, 85.174, 177.129, 59.836, 136, 59.836z\" />" +
                "</svg>"
            }
            else 
            {
            svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">" +
                "<path style=\"fill: rgb(255, 30, 0); \" d=\"M24.85, 10.126c2.018-4.783, 6.628-8.125, 11.99-8.125c7.223, 0, 12.425, 6.179, 13.079, 13.543 c0, 0, 0.353, 1.828-0.424, 5.119c-1.058, 4.482-3.545, 8.464-6.898, 11.503L24.85, 48L7.402, 32.165c-3.353-3.038-5.84-7.021-6.898-11.503 c-0.777-3.291-0.424-5.119-0.424-5.119C0.734, 8.179, 5.936, 2, 13.159, 2C18.522, 2, 22.832, 5.343, 24.85, 10.126z\" fill=\"#D75A4A\"></path>" +
                "</svg>"
            }

            document.getElementById("likeImage").innerHTML = svg;
            document.getElementById("likeCount").innerHTML = userLike;
        });

        document.getElementById("likeImage").addEventListener("click", function (e) {
            let item = "@Model.Id";
            let user = "@User.Identity.Name"

            hubConnection.invoke("Like", item, user);
        });

    document.getElementById("commentButton").addEventListener("click", function (e) {
        let item = "@Model.Id";
        let user = "@User.Identity.Name";
        let comment = document.getElementById("comment").value;

        hubConnection.invoke("Comments", item, user, comment);
    });

    hubConnection.on("Comments", function (date, time, userName, comment) {
        let li = document.createElement("li");
        li.classList.add("media");
        li.innerHTML = "<div><div class=\"media-body\">" +
            "<strong class=\"text-success\">" + userName + "</strong>" +
            "<span class=\"text-muted\"><small class=\"text-muted\"> " + date + " " + time + "</small>" +
            "</span><p>" + comment + "</p></div></div>"

        document.getElementById("commentsList").append(li);
    });
    hubConnection.start();
</script>
