// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectItransition.Data;

#nullable disable

namespace ProjectItransition.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectItransition.Models.CollectionModels.Collect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("typeCollection")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("ProjectItransition.Models.CollectionModels.CollectionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CollectId")
                        .HasColumnType("integer");

                    b.Property<int>("CollectionId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Tags")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.HasIndex("CollectId");

                    b.ToTable("CollectionItems");
                });

            modelBuilder.Entity("ProjectItransition.Models.CollectionModels.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionItemId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CommentCreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CommentValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CollectionItemId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("ProjectItransition.Models.CollectionModels.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LikeCount")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("collectionItemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("collectionItemId");

                    b.ToTable("Like");
                });

            modelBuilder.Entity("ProjectItransition.Models.CollectionModels.CollectionItem", b =>
                {
                    b.HasOne("ProjectItransition.Models.CollectionModels.Collect", null)
                        .WithMany("Items")
                        .HasForeignKey("CollectId");
                });

            modelBuilder.Entity("ProjectItransition.Models.CollectionModels.Comment", b =>
                {
                    b.HasOne("ProjectItransition.Models.CollectionModels.CollectionItem", "CollectionItem")
                        .WithMany("Comments")
                        .HasForeignKey("CollectionItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollectionItem");
                });

            modelBuilder.Entity("ProjectItransition.Models.CollectionModels.Like", b =>
                {
                    b.HasOne("ProjectItransition.Models.CollectionModels.CollectionItem", "collectionItem")
                        .WithMany("Like")
                        .HasForeignKey("collectionItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("collectionItem");
                });

            modelBuilder.Entity("ProjectItransition.Models.CollectionModels.Collect", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ProjectItransition.Models.CollectionModels.CollectionItem", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Like");
                });
#pragma warning restore 612, 618
        }
    }
}
